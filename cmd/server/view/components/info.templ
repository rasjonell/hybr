package components

import (
	"github.com/rasjonell/hybr/cmd/server/config"
	"github.com/rasjonell/hybr/cmd/server/view/icons"
	"strings"
)

func isURL(key string) bool {
	return strings.Contains(strings.ToLower(key), "url")
}

func getRedirectURL(val string) templ.SafeURL {
	if strings.HasPrefix(val, "http") {
		return templ.SafeURL(val)
	}
	return templ.SafeURL("http://" + val)
}

templ val(title string) {
	<span class="text-gray-600">{ title }</span>
}

func valueComponent(key, title string) templ.Component {
	if strings.ToLower(key) == "status" {
		return Chip(title, title == "running", "status")
	}
	return val(title)
}

templ Info(serviceName, title string, keys, vals []string) {
	<div
		class="space-y-4"
		hx-ext="sse"
		sse-connect={ config.BuildHostURL("/services/" + serviceName + "/status") }
	>
		<h2 class="text-2xl font-semibold mb-4 text-gray-800">{ title }</h2>
		for i, key := range keys {
			<p class="flex justify-between border-b border-gray-200 py-2">
				<strong class="text-gray-700">{ key }:</strong>
				if isURL(key) {
					<a href={ getRedirectURL(vals[i]) } class="text-blue-600 flex items-center" target="_blank">
						{ vals[i] }
						@icons.External("h-5 w-5 ml-1")
					</a>
				} else {
					@valueComponent(key, vals[i])
				}
			</p>
		}
	</div>
}
