package components

import "hybr/cmd/server/view/icons"

type SnackBarNotification struct {
	Type    string
	Content string
}

func getStyles(notifType string) string {
	defaultStyles := "fixed top-4 right-4 px-4 py-2 rounded-md shadow-lg flex items-center space-x-2 text-white "
	switch notifType {
	case "success":
		return defaultStyles + "bg-green-500"
	case "info":
		return defaultStyles + "bg-blue-500"
	case "warning":
		return defaultStyles + "bg-yellow-500"
	case "error":
		return defaultStyles + "bg-red-500"
	default:
		return defaultStyles
	}
}

templ SnackBarIcon(notifType string) {
	if notifType == "success" {
		@icons.Success("h-5 w-5")
	} else if notifType == "info" {
		@icons.Info("h-5 w-5")
	} else if notifType == "warning" {
		@icons.Warning("h-5 w-5")
	} else if notifType == "error" {
		@icons.Error("h-5 w-5")
	}
}

templ SnackBar(notification *SnackBarNotification) {
	if notification != nil {
		<div
			id="snackbar"
			role="alert"
			class={ getStyles(notification.Type) }
		>
			@SnackBarIcon(notification.Type)
			<span>{ notification.Content }</span>
			<button
				onclick="hideSnackbar()"
				class="text-white hover:text-green-200 focus:outline-none cursor-pointer"
			>
				@icons.Close("h-5 w-5")
			</button>
		</div>
		<script>
      setTimeout(hideSnackbar, 5000)

      function hideSnackbar() {
        const snackbar = document.getElementById("snackbar");
        snackbar.classList.add("hidden")
      }
    </script>
	}
}
